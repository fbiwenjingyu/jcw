<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ovit.jcw.mysqlmapper.AuditLogMapper">

	<resultMap id="BaseResultMap" type="com.ovit.jcw.model.AuditLog" >
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="IP" property="ip" jdbcType="VARCHAR" />
		<result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
		<result column="LOGIN_TIME" property="loginTime" jdbcType="VARCHAR" />
		<result column="INTERFACE_NAME" property="interfaceName" jdbcType="VARCHAR" />
		<result column="DESC_PRETTY" property="descPretty" jdbcType="VARCHAR" />
		<result column="DATA_USAGE" property="dataUsage" jdbcType="BIGINT" />
		<result column="DATA_SECURITY" property="dataSecurity" jdbcType="INTEGER" />
		<result column="SIGN" property="sign" jdbcType="VARCHAR" />
		<result column="QUERY_TYPE" property="queryType" jdbcType="INTEGER" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List" >
		ID,IP,LOGIN_NAME,LOGIN_TIME,INTERFACE_NAME,DESC_PRETTY,DATA_USAGE,DATA_SECURITY,SIGN,QUERY_TYPE,CREATE_TIME
	</sql>

	<select id="query" resultMap="BaseResultMap" parameterType="java.util.Map">
		select t.*,c.PK_COL_DATA as queryTypeValue
		FROM audit_log t
		JOIN data_config c on t.QUERY_TYPE = c.PK_COL_NAME AND c.DATA_TYPE = 'queryType'
		WHERE 1=1
		<if test="loginName != null and loginName != ''">
			AND t.LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
		</if>
		<if test="descPretty != null and descPretty != ''">
			AND t.DESC_PRETTY like CONCAT('%',#{descPretty,jdbcType=VARCHAR},'%')
		</if>
		<if test="queryType != null and queryType != ''">
			AND t.QUERY_TYPE = #{queryType,jdbcType=INTEGER}
		</if>
		<if test="(startUsage != null and startUsage != '') and (endUsage != null and endUsage != '') ">
			AND t.DATA_USAGE BETWEEN #{startUsage,jdbcType=BIGINT} AND #{endUsage,jdbcType=BIGINT}
		</if>
		<if test="ip != null and ip != ''">
			AND t.IP like CONCAT('%',#{ip,jdbcType=VARCHAR},'%')
		</if>
		<if test="(startTime != null and startTime != '') and (endTime != null and endTime != '') ">
			AND t.LOGIN_TIME BETWEEN #{startTime,jdbcType=VARCHAR} AND #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="opt == 1">
			AND to_days(t.LOGIN_TIME) = to_days(now())
		</if>
		<if test="opt == 2">
			AND TO_DAYS(NOW()) - TO_DAYS(t.LOGIN_TIME) = 1
		</if>
		<if test="opt == 4">
			AND DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(t.LOGIN_TIME)
		</if>
		<if test="opt == 5">
			AND DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(t.LOGIN_TIME)
		</if>
		ORDER BY t.LOGIN_TIME DESC
	</select>

	<!-- 请求频次查询 -->
	<select id="selectFrequency" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from audit_log
		where 1=1
		<if test="opt == 1">
			AND to_days(LOGIN_TIME) = to_days(now())
		</if>
		<if test="opt == 2">
			AND TO_DAYS(NOW()) - TO_DAYS(LOGIN_TIME) = 1
		</if>
		<if test="opt == 3">
			AND DATE_FORMAT(LOGIN_TIME,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
	</select>

	<!-- 数据使用量查询 -->
	<select id="selectUsageAmount" resultType="java.math.BigInteger" parameterType="java.util.Map">
		select ifnull(SUM(DATA_USAGE),0) from audit_log
		where 1=1
		<if test="opt == 1">
			AND to_days(LOGIN_TIME) = to_days(now())
		</if>
		<if test="opt == 2">
			AND TO_DAYS(NOW()) - TO_DAYS(LOGIN_TIME) = 1
		</if>
		<if test="opt == 3">
			AND DATE_FORMAT(LOGIN_TIME,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
	</select>

	<select id="selectCounts" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from audit_log where DESC_PRETTY like CONCAT('%',#{descPretty,jdbcType=VARCHAR},'%')
	</select>

	<insert id="insertLogRecords" useGeneratedKeys="true" keyProperty="id" parameterType="com.ovit.jcw.model.AuditLog" >
		insert into audit_log (IP,LOGIN_NAME,LOGIN_TIME,INTERFACE_NAME,DESC_PRETTY,DATA_USAGE,SIGN,QUERY_TYPE)
		values (#{ip}, #{loginName}, #{loginTime}, #{interfaceName}, #{descPretty}, #{dataUsage},#{sign}, #{queryType} )
	</insert>



</mapper>